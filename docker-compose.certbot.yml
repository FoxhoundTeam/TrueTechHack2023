version: '3.8'
services:

  foxeye_db:
    build:
      context: ./postgres
      dockerfile: Dockerfile.prod
    # image: postgres:14-alpine
    container_name: postgres14_foxeye
    ports:
      - 5430:5432 # доступ к БД извне по порту 5430
    restart: always
    volumes:
      - postgres_volume:/var/lib/postgresql/data
      # - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_DB=foxeye_db
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=kw2RdBYa

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend_prod
    restart: always
    # extra_hosts:
      # - "host.docker.internal:host-gateway"
    working_dir: /backend
    command: >
          sh -c "
          echo pwd && pwd &&
          echo ls && ls &&
          cd backend &&
          python manage.py makemigrations &&
          python manage.py migrate --noinput &&
          gunicorn --bind 0.0.0.0:8000 --workers 4 backend.wsgi:application
          "
    # python manage.py collectstatic --noinput &&
    volumes:
      - .:/backend
    ports:
      - 8000:8000
    env_file:
      - backend/.env.prod
    environment:
      - POSTGRES_HOST=foxeye_db
      - POSTGRES_NAME=foxeye_db
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=kw2RdBYa
      # для работы с командой python manage.py createsuperuser --noinput
      # https://docs.djangoproject.com/en/4.1/ref/django-admin/#django-admin-createsuperuser
      # не подходит, так как каждый раз сбрасывает пароль
      # - DJANGO_SUPERUSER_USERNAME=admin
      # - DJANGO_SUPERUSER_PASSWORD=adminpass
      # - DJANGO_SUPERUSER_EMAIL="admin@admin.com"
      # - DEBUG=0
      # - SECRET_KEY="django-insecure-63-b9e&kzla8vd)k=5)mc5z$ji&e&o$^+873s)r)^06s!s0^42"
      # - ALLOWED_HOSTS="localhost, 127.0.0.1, 0.0.0.0, 158.160.0.127"
    depends_on:
      - foxeye_db
      # - backend-init
  
   #backend-init: # вариант сделать заполнение БД тестовыми данными через этап сборки контейнера
    # command: python manage.py migrate --noinput
    # volumes:
      # - .:/backend
    # depends_on:
      # - db

  nginx:
    container_name: nginx_prod
    restart: unless-stopped
    # expose:
    #   - 8000
    ports:
      - 80:80
      - 443:443
      # - 8000:8000
    volumes:
      - ./backend/static:/static
      - ./backend/media:/media
      - vue_dist:/dist
      # - ./nginx:/etc/nginx/conf.d
      # - ./nginx/foxeye.prod.conf:/etc/nginx/conf.d/default.conf
      # - ./data/certbot/conf:/etc/letsencrypt
      # - ./data/certbot/www:/var/www/certbot
    build:
      context: ./nginx
      dockerfile: Dockerfile
    environment:
      - RUN_CERTBOT=true
      - CERTBOT_DOMAINS=foxhound-team.pro,www.foxhound-team.pro
      - CERTBOT_EMAIL=nk260an@gmail.com
    depends_on:
      - backend
      # - frontend
    command: >
        sh -c "
        certbot --nginx
        --email nk260an@gmail.com
        --domains foxhound-team.pro,www.foxhound-team.pro
        --agree-tos --redirect --reinstall --non-interactive
        -v
        "
volumes:
  postgres_volume:
  static_volume:
  vue_dist:
  pgadmin_volume:
  nginx_volume: